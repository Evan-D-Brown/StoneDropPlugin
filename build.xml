<?xml version="1.0" encoding="UTF-8"?>
<project name="stonedropplugin" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- Modules -->
  
  
  <!-- Module DropPlugin -->
  
  <dirname property="module.dropplugin.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.dropplugin" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="dropplugin.output.dir" value="${module.dropplugin.basedir}/out/production/DropPlugin"/>
  <property name="dropplugin.testoutput.dir" value="${module.dropplugin.basedir}/out/test/DropPlugin"/>
  
  <path id="dropplugin.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="dropplugin.module.production.classpath">
    <pathelement location="${basedir}/dependencies/server/minecraft_server.jar"/>
  </path>
  
  <path id="dropplugin.runtime.production.module.classpath">
    <pathelement location="${dropplugin.output.dir}"/>
    <pathelement location="${basedir}/dependencies/server/minecraft_server.jar"/>
  </path>
  
  <path id="dropplugin.module.classpath">
    <pathelement location="${dropplugin.output.dir}"/>
    <pathelement location="${basedir}/dependencies/server/minecraft_server.jar"/>
  </path>
  
  <path id="dropplugin.runtime.module.classpath">
    <pathelement location="${dropplugin.testoutput.dir}"/>
    <pathelement location="${dropplugin.output.dir}"/>
    <pathelement location="${basedir}/dependencies/server/minecraft_server.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.dropplugin">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.dropplugin">
    <patternset refid="excluded.from.module.dropplugin"/>
  </patternset>
  
  <path id="dropplugin.module.sourcepath">
    <dirset dir="${module.dropplugin.basedir}/DropPlugin">
      <include name="src"/>
    </dirset>
  </path>
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.stonedrop" value="${basedir}/dependencies/server/plugins"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.StoneDrop.jar" value="${artifacts.temp.dir}/StoneDrop.jar"/>
  </target>
  
  <target name="artifact.stonedrop" depends="init.artifacts" description="Build &#39;StoneDrop&#39; artifact">
    <property name="artifact.temp.output.stonedrop" value="${artifacts.temp.dir}/StoneDrop"/>
    <mkdir dir="${artifact.temp.output.stonedrop}"/>
    <jar destfile="${temp.jar.path.StoneDrop.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${dropplugin.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.StoneDrop.jar}" tofile="${artifact.temp.output.stonedrop}/StoneDrop.jar"/>
  </target>

</project>